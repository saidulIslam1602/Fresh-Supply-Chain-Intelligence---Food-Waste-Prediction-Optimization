apiVersion: v1
kind: Secret
metadata:
  name: fresh-supply-chain-secrets
  namespace: fresh-supply-chain
  labels:
    app: fresh-supply-chain-intelligence
type: Opaque
stringData:
  # Database Credentials
  DATABASE_USER: "sa"
  DATABASE_PASSWORD: "YourStrongPassword123!"
  DATABASE_URL: "mssql+pyodbc://sa:YourStrongPassword123!@sqlserver-service:1433/FreshSupplyChainDB?driver=ODBC+Driver+17+for+SQL+Server"
  
  # JWT Secrets
  JWT_SECRET_KEY: "your-super-secret-jwt-key-change-in-production"
  STATIC_API_KEY: "your-static-api-key-for-service-authentication"
  
  # Redis Password (if enabled)
  REDIS_PASSWORD: ""
  
  # External Service Keys
  OPENAI_API_KEY: "your-openai-api-key-if-needed"
  AWS_ACCESS_KEY_ID: "your-aws-access-key"
  AWS_SECRET_ACCESS_KEY: "your-aws-secret-key"
  
  # Monitoring Credentials
  GRAFANA_ADMIN_USER: "admin"
  GRAFANA_ADMIN_PASSWORD: "admin123"
  
  # Email Configuration (for alerts)
  SMTP_HOST: "smtp.gmail.com"
  SMTP_PORT: "587"
  SMTP_USER: "your-email@gmail.com"
  SMTP_PASSWORD: "your-app-password"
  
  # Slack Integration (for alerts)
  SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/your/slack/webhook"
  
  # Certificate for HTTPS (base64 encoded)
  TLS_CERT: ""
  TLS_KEY: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  namespace: fresh-supply-chain
  labels:
    app: fresh-supply-chain-intelligence
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5leGFtcGxlLmNvbSI6eyJ1c2VybmFtZSI6InVzZXIiLCJwYXNzd29yZCI6InBhc3MiLCJhdXRoIjoiZFhObGNqcHdZWE56In19fQ==
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
  namespace: fresh-supply-chain
  labels:
    app: fresh-supply-chain-intelligence
type: kubernetes.io/tls
data:
  # Replace with your actual TLS certificate and key (base64 encoded)
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t...
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t...