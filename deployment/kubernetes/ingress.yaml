apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fresh-supply-chain-ingress
  namespace: fresh-supply-chain
  labels:
    app: fresh-supply-chain-intelligence
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - api.fresh-supply-chain.local
    - dashboard.fresh-supply-chain.local
    - grafana.fresh-supply-chain.local
    - jaeger.fresh-supply-chain.local
    secretName: fresh-supply-chain-tls
  rules:
  - host: api.fresh-supply-chain.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-service
            port:
              number: 8000
  - host: dashboard.fresh-supply-chain.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dashboard-service
            port:
              number: 8050
  - host: grafana.fresh-supply-chain.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000
  - host: jaeger.fresh-supply-chain.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jaeger-service
            port:
              number: 16686
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: fresh-supply-chain-network-policy
  namespace: fresh-supply-chain
  labels:
    app: fresh-supply-chain-intelligence
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow ingress from nginx ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 8050
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 16686
  # Allow internal communication within namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: fresh-supply-chain
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 8050
    - protocol: TCP
      port: 1433
    - protocol: TCP
      port: 6379
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 16686
    - protocol: UDP
      port: 6831
    - protocol: TCP
      port: 6832
  # Allow monitoring scraping
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 8050
    - protocol: TCP
      port: 9121
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  # Allow HTTPS outbound (for external APIs)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  # Allow HTTP outbound (for health checks, etc.)
  - to: []
    ports:
    - protocol: TCP
      port: 80
  # Allow internal communication
  - to:
    - namespaceSelector:
        matchLabels:
          name: fresh-supply-chain
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 8050
    - protocol: TCP
      port: 1433
    - protocol: TCP
      port: 6379
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 3000
    - protocol: TCP
      port: 16686
    - protocol: UDP
      port: 6831
    - protocol: TCP
      port: 6832