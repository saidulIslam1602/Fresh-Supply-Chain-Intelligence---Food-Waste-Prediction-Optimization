# Multi-stage build for Fresh Supply Chain Dashboard
# Stage 1: Build dependencies
FROM python:3.9-slim-bullseye as builder

WORKDIR /app

# Install system dependencies for building
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    unixodbc-dev \
    libgirepository1.0-dev \
    libcairo2-dev \
    libgdk-pixbuf2.0-dev \
    libffi-dev \
    shared-mime-info \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy dashboard requirements
COPY dashboard/requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

# Stage 2: Production image
FROM python:3.9-slim-bullseye

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

WORKDIR /app

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    unixodbc \
    libgirepository1.0-dev \
    libcairo2-dev \
    libgdk-pixbuf2.0-dev \
    shared-mime-info \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy Python packages from builder stage
COPY --from=builder /root/.local /home/appuser/.local

# Copy application code
COPY dashboard/app.py ./dashboard/app.py
COPY dashboard/components/ ./dashboard/components/
COPY config/ ./config/
COPY api/ ./api/
COPY models/ ./models/
COPY data/ ./data/

# Create necessary directories
RUN mkdir -p /app/logs /app/temp \
    && chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Add user's local bin to PATH
ENV PATH=/home/appuser/.local/bin:$PATH

# Set Python path
ENV PYTHONPATH=/app

# Set environment variables
ENV DASH_DEBUG=0
ENV PYTHONUNBUFFERED=1

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=20s --retries=3 \
    CMD curl -f http://localhost:8050/health || exit 1

# Expose port
EXPOSE 8050

# Command to run the application
CMD ["gunicorn", "-w", "2", "-b", "0.0.0.0:8050", "--timeout", "120", "--keep-alive", "5", "--max-requests", "1000", "--access-logfile", "-", "--error-logfile", "-", "dashboard.app:server"]